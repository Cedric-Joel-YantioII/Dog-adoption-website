@page "/login"

@using Microsoft.EntityFrameworkCore
@using DogAdoption.Models
@inject IDbContextFactory<DogAdoption.Data.DogAdoptionContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Admin Login</PageTitle>

<h1>Admin Login</h1>

<hr />

@if (showErrorMessage)
{
    <div class="alert alert-danger" role="alert">
        Incorrect username or password, please try again.
    </div>
}

<EditForm Model="@adminUser" OnValidSubmit="@HandleLogin" FormName="adminLoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="adminUser.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="adminUser.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

<div>
    <a href="/register">Register User</a>
</div>

@code {
    
    [SupplyParameterFromForm]
    private AdminUser adminUser { get; set; } = new AdminUser();
    private bool showErrorMessage = false;

    private async Task HandleLogin()
    {
        using var dbContext = DbFactory.CreateDbContext();
        var existingUser = await dbContext.AdminUser
            .FirstOrDefaultAsync(u => u.Username == adminUser.Username && u.Password == adminUser.Password);

        if (existingUser != null)
        {
            NavigationManager.NavigateTo("/adminDogsView");
        }
        else
        {
            showErrorMessage = true;
        }
    }
}
